declare const _default: {
    filter_dict: {
        horizontal_lines: (imgData: any) => any;
        extreme_offset_blue: (imgData: any) => any;
        ocean: (imgData: any) => any;
        extreme_offset_green: (imgData: any) => any;
        offset_green: (imgData: any) => any;
        extra_offset_blue: (imgData: any) => any;
        extra_offset_red: (imgData: any) => any;
        extra_offset_green: (imgData: any) => any;
        extreme_offset_red: (imgData: any) => any;
        specks_redscale: (imgData: any) => any;
        vintage: (imgData: any) => any;
        perfume: (imgData: any) => any;
        serenity: (imgData: any) => any;
        eclectic: (imgData: any) => any;
        diagonal_lines: (imgData: any) => any;
        green_specks: (imgData: any) => any;
        warmth: (imgData: any) => any;
        casino: (imgData: any) => any;
        green_diagonal_lines: (imgData: any) => any;
        offset: (imgData: any) => any;
        offset_blue: (imgData: any) => any;
        neue: (imgData: any) => any;
        sunset: (imgData: any) => any;
        specks: (imgData: any) => any;
        wood: (imgData: any) => any;
        lix: (imgData: any) => any;
        ryo: (imgData: any) => any;
        bluescale: (imgData: any) => any;
        solange: (imgData: any) => any;
        evening: (imgData: any) => any;
        crimson: (imgData: any) => any;
        teal_min_noise: (imgData: any) => any;
        phase: (imgData: any) => any;
        dark_purple_min_noise: (imgData: any) => any;
        coral: (imgData: any) => any;
        darkify: (imgData: any, dec_amt: any) => any;
        incbrightness: (imgData: any, inc_amt: any) => any;
        incbrightness2: (imgData: any) => any;
        yellow_casino: (imgData: any) => any;
        invert: (imgData: any) => any;
        sat_adj: (imgData: any) => any;
        lemon: (imgData: any) => any;
        pink_min_noise: (imgData: any) => any;
        frontward: (imgData: any) => any;
        pink_aura: (imgData: any) => any;
        haze: (imgData: any) => any;
        cool_twilight: (imgData: any) => any;
        blues: (imgData: any) => any;
        horizon: any;
        mellow: (imgData: any) => any;
        solange_dark: (imgData: any) => any;
        solange_grey: (imgData: any) => any;
        zapt: (imgData: any) => any;
        eon: (imgData: any) => any;
        aeon: (imgData: any) => any;
        matrix: (imgData: any) => any;
        cosmic: (imgData: any) => any;
        min_noise: (imgData: any) => any;
        red_min_noise: (imgData: any) => any;
        matrix2: (imgData: any) => any;
        purplescale: (imgData: any) => any;
        radio: (imgData: any) => any;
        twenties: (imgData: any) => any;
        a: any;
        pixel_blue: (imgData: any) => any;
        greyscale: (imgData: any) => any;
        grime: (imgData: any) => any;
        redgreyscale: (imgData: any) => any;
        retroviolet: (imgData: any) => any;
        greengreyscale: (imgData: any) => any;
        green_med_noise: (imgData: any) => any;
        green_min_noise: (imgData: any) => any;
        blue_min_noise: (imgData: any) => any;
        rosetint: (imgData: any) => any;
        purple_min_noise: (imgData: any) => any;
        red_effect: (imgData: any) => any;
        gamma: (imgData: any) => any;
        teal_gamma: (imgData: any) => any;
        purple_gamma: (imgData: any) => any;
        yellow_gamma: (imgData: any) => any;
        bluered_gamma: (imgData: any) => any;
        green_gamma: (imgData: any) => any;
        red_gamma: (imgData: any) => any;
        black_specks: (imgData: any) => any;
        white_specks: (imgData: any) => any;
        salt_and_pepper: (imgData: any) => any;
        rgbSplit: (imgData: any) => any;
        threshold: (imgData: any, threshold?: number) => any;
        threshold75: (imgData: any) => any;
        threshold125: (imgData: any) => any;
        pixelate: (imgData: any, sample_size?: number) => any;
        pixelate16: (imgData: any) => any;
    };
    filterImg: (img: any, filter: any) => any;
    getFilterNames: () => {
        horizontal_lines: (imgData: any) => any;
        extreme_offset_blue: (imgData: any) => any;
        ocean: (imgData: any) => any;
        extreme_offset_green: (imgData: any) => any;
        offset_green: (imgData: any) => any;
        extra_offset_blue: (imgData: any) => any;
        extra_offset_red: (imgData: any) => any;
        extra_offset_green: (imgData: any) => any;
        extreme_offset_red: (imgData: any) => any;
        specks_redscale: (imgData: any) => any;
        vintage: (imgData: any) => any;
        perfume: (imgData: any) => any;
        serenity: (imgData: any) => any;
        eclectic: (imgData: any) => any;
        diagonal_lines: (imgData: any) => any;
        green_specks: (imgData: any) => any;
        warmth: (imgData: any) => any;
        casino: (imgData: any) => any;
        green_diagonal_lines: (imgData: any) => any;
        offset: (imgData: any) => any;
        offset_blue: (imgData: any) => any;
        neue: (imgData: any) => any;
        sunset: (imgData: any) => any;
        specks: (imgData: any) => any;
        wood: (imgData: any) => any;
        lix: (imgData: any) => any;
        ryo: (imgData: any) => any;
        bluescale: (imgData: any) => any;
        solange: (imgData: any) => any;
        evening: (imgData: any) => any;
        crimson: (imgData: any) => any;
        teal_min_noise: (imgData: any) => any;
        phase: (imgData: any) => any;
        dark_purple_min_noise: (imgData: any) => any;
        coral: (imgData: any) => any;
        darkify: (imgData: any, dec_amt: any) => any;
        incbrightness: (imgData: any, inc_amt: any) => any;
        incbrightness2: (imgData: any) => any;
        yellow_casino: (imgData: any) => any;
        invert: (imgData: any) => any;
        sat_adj: (imgData: any) => any;
        lemon: (imgData: any) => any;
        pink_min_noise: (imgData: any) => any;
        frontward: (imgData: any) => any;
        pink_aura: (imgData: any) => any;
        haze: (imgData: any) => any;
        cool_twilight: (imgData: any) => any;
        blues: (imgData: any) => any;
        horizon: any;
        mellow: (imgData: any) => any;
        solange_dark: (imgData: any) => any;
        solange_grey: (imgData: any) => any;
        zapt: (imgData: any) => any;
        eon: (imgData: any) => any;
        aeon: (imgData: any) => any;
        matrix: (imgData: any) => any;
        cosmic: (imgData: any) => any;
        min_noise: (imgData: any) => any;
        red_min_noise: (imgData: any) => any;
        matrix2: (imgData: any) => any;
        purplescale: (imgData: any) => any;
        radio: (imgData: any) => any;
        twenties: (imgData: any) => any;
        a: any;
        pixel_blue: (imgData: any) => any;
        greyscale: (imgData: any) => any;
        grime: (imgData: any) => any;
        redgreyscale: (imgData: any) => any;
        retroviolet: (imgData: any) => any;
        greengreyscale: (imgData: any) => any;
        green_med_noise: (imgData: any) => any;
        green_min_noise: (imgData: any) => any;
        blue_min_noise: (imgData: any) => any;
        rosetint: (imgData: any) => any;
        purple_min_noise: (imgData: any) => any;
        red_effect: (imgData: any) => any;
        gamma: (imgData: any) => any;
        teal_gamma: (imgData: any) => any;
        purple_gamma: (imgData: any) => any;
        yellow_gamma: (imgData: any) => any;
        bluered_gamma: (imgData: any) => any;
        green_gamma: (imgData: any) => any;
        red_gamma: (imgData: any) => any;
        black_specks: (imgData: any) => any;
        white_specks: (imgData: any) => any;
        salt_and_pepper: (imgData: any) => any;
        rgbSplit: (imgData: any) => any;
        threshold: (imgData: any, threshold?: number) => any;
        threshold75: (imgData: any) => any;
        threshold125: (imgData: any) => any;
        pixelate: (imgData: any, sample_size?: number) => any;
        pixelate16: (imgData: any) => any;
    };
    replaceImgElement: (canvas: any, img: any) => void;
    filterImgData: (user_img_data: any, filter: any) => any;
    getFilterList: () => string[];
    adjBrightness: (img: any, BRIGHTNESS_ADJ: any) => void;
    convertToJpg: (file: any) => Promise<unknown>;
};
export default _default;
